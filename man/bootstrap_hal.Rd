% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inference.R
\name{bootstrap_hal}
\alias{bootstrap_hal}
\title{Bootstrap a Selected HAL Model Using Nonzero Basis Functions}
\usage{
bootstrap_hal(hal_fit, nboot = 1000, lambda = NULL, seed = NULL)
}
\arguments{
\item{hal_fit}{A HAL fit object obtained from fitting a HAL model.}

\item{nboot}{The number of bootstrap replicates to generate (default is 1000).}
}
\value{
A modified HAL fit object with relaxed coefficient fits that includes:
\itemize{
\item \code{bootstrap_info}: A list containing the original training data (\code{X}), an array of bootstrapped HAL fit objects (\code{hal_fits}), and the bootstrap index matrix (\code{index}).
}
}
\description{
This function bootstraps a Highly Adaptive Lasso (HAL) model to generate bootstrap replicates
of the model coefficients selected by the original HAL fit (i.e., those with nonzero coefficients).
This is particularly useful for inference procedures that require resampling techniques to estimate
variability and compute confidence intervals.
}
\details{
The function
\itemize{
\item Extract and process the original training data.
\item Construct the original design matrix using the basis functions specified in the HAL model.
\item Fit a relaxed model using \code{bigGlm} from the \code{glmnet} package to compute coefficients using the full data set.
\item Generate bootstrap indices and perform resampling to create bootstrap replicates of the HAL model.
}

Importantly, our bootstrap procedure does not re-bootstrap the HAL lasso problem itself; instead, it refits the coefficients of the basis functions selected by HAL using bootstrap replicates of the data with unpenalized generalized linear models. As a result, bootstrapping is computationally inexpensive and runs quickly.

Each bootstrap replicate is fitted independently, and the coefficients are stored. The training data and other mutable elements are removed from the bootstrapped models to prevent recursive growth in object size.
}
\note{
The function uses the \code{bigGlm} function from the \code{glmnet} package to fit the model at each bootstrap iteration.
}
\examples{
# Assuming `hal_fit` is a previously fitted HAL model:
hal_fit_bootstrapped <- bootstrap_hal(hal_fit)

}
\seealso{
\code{\link{glmnet::bigGlm}}, \code{\link{make_design_matrix}}, and other functions involved in manipulating and fitting HAL models.
}
